function options = configure_training(validation_data, params)
%configure_training
%
% Syntax: options = configure_training(validation_data, params)
%
% Configures MLP training
narginchk(2, 2)
nargoutchk(1, 1)

mlp = params.mlp;

% Specify training options
if mlp.learn_decay_schedule < Inf
    options = trainingOptions(mlp.solver,...
        'Verbose', mlp.verbose,...
        'MaxEpochs', mlp.max_epochs,...
        'ValidationPatience', mlp.validation_patience,...
        'InitialLearnRate', mlp.learn_rate,...
        'LearnRateSchedule', 'piecewise',...
        'LearnRateDropPeriod', mlp.learn_decay_schedule,...
        'LearnRateDropFactor', mlp.learn_decay_factor,...
        'GradientThreshold', mlp.gradient_threshold,...
        'MiniBatchSize', mlp.minibatch_size,...    
        'ExecutionEnvironment', mlp.execution_environment,...
        'ValidationData', validation_data,...
        'Shuffle', 'every-epoch'...
    );
else
    options = trainingOptions(mlp.solver,...
        'Verbose', mlp.verbose,...
        'MaxEpochs', mlp.max_epochs,...
        'ValidationPatience', mlp.validation_patience,...
        'InitialLearnRate', mlp.learn_rate,...
        'LearnRateSchedule', 'none',...
        'GradientThreshold', mlp.gradient_threshold,...
        'MiniBatchSize', mlp.minibatch_size,...    
        'ExecutionEnvironment', mlp.execution_environment,...
        'ValidationData', validation_data,...
        'Shuffle', 'every-epoch'...
    );
end

end

